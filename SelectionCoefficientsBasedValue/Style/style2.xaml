<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--<Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="OptionMark.Static.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="OptionMark.Static.Border"
                     Color="#FFE6E8E6" />
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush
        x:Key="OptionMark.MouseOver.Background"
        Color="WhiteSmoke" />
    <SolidColorBrush
        x:Key="OptionMark.MouseOver.Border"
        Color="#FFD1D1D1" />
    <SolidColorBrush
        x:Key="OptionMark.MouseOver.Glyph"
        Color="#FF212121" />
    <SolidColorBrush
        x:Key="OptionMark.Disabled.Background"
        Color="#FFECECEC" />
    <SolidColorBrush
        x:Key="OptionMark.Disabled.Border"
        Color="#FF2B3541" />
    <SolidColorBrush
        x:Key="OptionMark.Disabled.Glyph"
        Color="Gray" />
    <SolidColorBrush
        x:Key="OptionMark.Pressed.Background"
        Color="#FFFFAD97" />
    <SolidColorBrush
        x:Key="OptionMark.Pressed.Border"
        Color="#FFFFAD97" />
    <SolidColorBrush
        x:Key="OptionMark.Pressed.Glyph"
        Color="#FF858585" />
    <SolidColorBrush
        x:Key="OptionMark.Static.Glyph"
        Color="#FF212121" />
    <Style
        x:Key="CheckBoxStyleDVPINotToggleButton"
        TargetType="{x:Type CheckBox}">
        <Setter
            Property="FocusVisualStyle"
            Value="{StaticResource FocusVisual}" />
        <Setter
            Property="Background"
            Value="{StaticResource OptionMark.Static.Background}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource OptionMark.Static.Border}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="BorderThickness"
            Value="2" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type CheckBox}">
                    <Grid
                        x:Name="templateRoot"
                        Background="Transparent"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
                                Width="Auto" />
                            <ColumnDefinition
                                Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="checkBoxBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="1"
                            CornerRadius="5"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid
                                x:Name="markGrid">
                                <Path
                                    x:Name="optionMark"
                                    Data="F1 M 0,5 L 4,10 L 10,2.5 L 10,0 L 4,7.5 L2,5"
                                    Height="12"
                                    Width="12"
                                    Stretch="Fill"
                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                    Margin="1"
                                    Opacity="0" />
                                <Rectangle
                                    x:Name="indeterminateMark"
                                    Fill="{StaticResource OptionMark.Static.Glyph}"
                                    Margin="3"
                                    Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Grid.Column="1"
                            Focusable="False"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="HasContent"
                            Value="true">
                            <Setter
                                Property="FocusVisualStyle"
                                Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter
                                Property="Padding"
                                Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.MouseOver.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.MouseOver.Border}" />
                            <Setter
                                Property="Fill"
                                TargetName="optionMark"
                                Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            <Setter
                                Property="Fill"
                                TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Background"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Disabled.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Disabled.Border}" />
                            <Setter
                                Property="Fill"
                                TargetName="optionMark"
                                Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            <Setter
                                Property="Fill"
                                TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.Disabled.Glyph}" />
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="true">
                            <Setter
                                Property="Background"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Pressed.Background}" />
                            <Setter
                                Property="BorderBrush"
                                TargetName="checkBoxBorder"
                                Value="{StaticResource OptionMark.Pressed.Border}" />
                            <Setter
                                Property="Fill"
                                TargetName="optionMark"
                                Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            <Setter
                                Property="Fill"
                                TargetName="indeterminateMark"
                                Value="{StaticResource OptionMark.Pressed.Glyph}" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="true">
                            <Setter
                                Property="Opacity"
                                TargetName="optionMark"
                                Value="1" />
                            <Setter
                                Property="Opacity"
                                TargetName="indeterminateMark"
                                Value="0" />
                        </Trigger>
                        <Trigger
                            Property="IsChecked"
                            Value="{x:Null}">
                            <Setter
                                Property="Opacity"
                                TargetName="optionMark"
                                Value="0" />
                            <Setter
                                Property="Opacity"
                                TargetName="indeterminateMark"
                                Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->



    <Style x:Key="TabItemStyleLile"
           TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            BorderThickness="0,0,0,0"
                            CornerRadius="5"
                            Padding="10,3"
                            Margin="0,0,3,5"
                            Panel.ZIndex="0"
                            BorderBrush="Gainsboro">
                        <ContentPresenter x:Name="ContentSite"
                                          ContentSource="Header" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="White" />
                            <Setter Property="FontFamily"
                                    Value="/DVPIAddin;component/Styles/Fonts/#Manrope"/>
                            <Setter Property="TextElement.FontWeight"
                                    TargetName="ContentSite"
                                    Value="Medium" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#FFF15025" />
                            <Setter Property="FontSize"
                                    Value="12" />

                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="Black" />
                            <Setter Property="FontFamily"
                                    Value="/DVPIAddin;component/Styles/Fonts/#Manrope" />
                            <Setter Property="TextElement.FontWeight"
                                    TargetName="ContentSite"
                                    Value="Medium" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#FFE6E6E6" />
                            <Setter Property="FontSize"
                                    Value="12" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyleView"
           TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            BorderThickness="0,0,0,0"
                            CornerRadius="5"
                            Padding="2"
                            Margin="0,0,5,0"
                            Panel.ZIndex="0"
                            BorderBrush="Gainsboro">
                        <ContentPresenter x:Name="ContentSite"
                                          ContentSource="Header" />

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="White" />
                            <Setter Property="TextElement.FontWeight"
                                    TargetName="ContentSite"
                                    Value="Bold" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#FF656565" />
                            <Setter Property="FontSize"
                                    Value="16" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="Black" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#FFE6E6E6" />
                            <Setter Property="FontSize"
                                    Value="16" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemStyleLile2"
           TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Border"
                            BorderThickness="0,0,0,0"
                            CornerRadius="0,0,10,10"
                            Padding="5,5,5,5"
                            Margin="0,-2,0,0"
                            BorderBrush="Gainsboro">
                        <ContentPresenter x:Name="ContentSite"
                                          ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="White" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#FFF15025" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="Black" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="#FFE6E6E6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>





</ResourceDictionary>